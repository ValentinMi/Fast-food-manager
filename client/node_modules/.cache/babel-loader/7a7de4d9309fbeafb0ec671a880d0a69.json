{"ast":null,"code":"import _objectSpread from \"/home/mower/projets/exercice/redux-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as productConst from \"../const/product.const\";\nconst initState = {\n  products: [{\n    name: \"Hamburger\",\n    price: 4,\n    stock: 13\n  }, {\n    name: \"Hot-Dog\",\n    price: 2,\n    stock: 10\n  }, {\n    name: \"Salade César\",\n    price: 5,\n    stock: 8\n  }, {\n    name: \"Pizza\",\n    price: 10,\n    stock: 7\n  }, {\n    name: \"Tacos\",\n    price: 7.5,\n    stock: 4\n  }]\n};\n\nconst productReducer = (state = initState, action) => {\n  // Clone products\n  let newProducts = [...state.products]; // Destructure action\n\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    // ADD NEW PRODUCT\n    case productConst.ADD_PRODUCT:\n      return _objectSpread({}, state, {\n        products: [...state.products, payload]\n      });\n    // REMOVE PRODUCT\n\n    case productConst.REMOVE_PRODUCT:\n      //  Reverse filter to remove a product\n      newProducts = newProducts.filter(p => p !== state.products[payload.index]);\n      return _objectSpread({}, state, {\n        products: newProducts\n      });\n    // REFOUND\n\n    case productConst.REFOUND_PRODUCT:\n      // Add selected value\n      newProducts[payload.index].stock += payload.selectValue;\n      return _objectSpread({}, state, {\n        products: newProducts\n      });\n    // SUBSTRACT\n\n    case productConst.SUBSTRACT_PRODUCT:\n      newProducts[payload.index].stock -= payload.value;\n      return _objectSpread({}, state, {\n        products: newProducts\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/home/mower/projets/exercice/redux-test/client/src/reducers/product.reducer.js"],"names":["productConst","initState","products","name","price","stock","productReducer","state","action","newProducts","type","payload","ADD_PRODUCT","REMOVE_PRODUCT","filter","p","index","REFOUND_PRODUCT","selectValue","SUBSTRACT_PRODUCT","value"],"mappings":";AAAA,OAAO,KAAKA,YAAZ,MAA8B,wBAA9B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADQ,EAMR;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GANQ,EAWR;AACEF,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAXQ,EAgBR;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAhBQ,EAqBR;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GArBQ;AADM,CAAlB;;AA8BA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoBO,MAApB,KAA+B;AACpD;AACA,MAAIC,WAAW,GAAG,CAAC,GAAGF,KAAK,CAACL,QAAV,CAAlB,CAFoD,CAIpD;;AAJoD,QAK5CQ,IAL4C,GAK1BF,MAL0B,CAK5CE,IAL4C;AAAA,QAKtCC,OALsC,GAK1BH,MAL0B,CAKtCG,OALsC;;AAOpD,UAAQD,IAAR;AACE;AACA,SAAKV,YAAY,CAACY,WAAlB;AACE,+BAAYL,KAAZ;AAAmBL,QAAAA,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBS,OAApB;AAA7B;AAEF;;AACA,SAAKX,YAAY,CAACa,cAAlB;AACE;AACAJ,MAAAA,WAAW,GAAGA,WAAW,CAACK,MAAZ,CACZC,CAAC,IAAIA,CAAC,KAAKR,KAAK,CAACL,QAAN,CAAeS,OAAO,CAACK,KAAvB,CADC,CAAd;AAGA,+BACKT,KADL;AAEEL,QAAAA,QAAQ,EAAEO;AAFZ;AAKF;;AACA,SAAKT,YAAY,CAACiB,eAAlB;AACE;AACAR,MAAAA,WAAW,CAACE,OAAO,CAACK,KAAT,CAAX,CAA2BX,KAA3B,IAAoCM,OAAO,CAACO,WAA5C;AACA,+BACKX,KADL;AAEEL,QAAAA,QAAQ,EAAEO;AAFZ;AAKF;;AACA,SAAKT,YAAY,CAACmB,iBAAlB;AACEV,MAAAA,WAAW,CAACE,OAAO,CAACK,KAAT,CAAX,CAA2BX,KAA3B,IAAoCM,OAAO,CAACS,KAA5C;AACA,+BAAYb,KAAZ;AAAmBL,QAAAA,QAAQ,EAAEO;AAA7B;;AACF;AACE,aAAOF,KAAP;AA9BJ;AAgCD,CAvCD;;AAyCA,eAAeD,cAAf","sourcesContent":["import * as productConst from \"../const/product.const\";\n\nconst initState = {\n  products: [\n    {\n      name: \"Hamburger\",\n      price: 4,\n      stock: 13\n    },\n    {\n      name: \"Hot-Dog\",\n      price: 2,\n      stock: 10\n    },\n    {\n      name: \"Salade César\",\n      price: 5,\n      stock: 8\n    },\n    {\n      name: \"Pizza\",\n      price: 10,\n      stock: 7\n    },\n    {\n      name: \"Tacos\",\n      price: 7.5,\n      stock: 4\n    }\n  ]\n};\n\nconst productReducer = (state = initState, action) => {\n  // Clone products\n  let newProducts = [...state.products];\n\n  // Destructure action\n  const { type, payload } = action;\n\n  switch (type) {\n    // ADD NEW PRODUCT\n    case productConst.ADD_PRODUCT:\n      return { ...state, products: [...state.products, payload] };\n\n    // REMOVE PRODUCT\n    case productConst.REMOVE_PRODUCT:\n      //  Reverse filter to remove a product\n      newProducts = newProducts.filter(\n        p => p !== state.products[payload.index]\n      );\n      return {\n        ...state,\n        products: newProducts\n      };\n\n    // REFOUND\n    case productConst.REFOUND_PRODUCT:\n      // Add selected value\n      newProducts[payload.index].stock += payload.selectValue;\n      return {\n        ...state,\n        products: newProducts\n      };\n\n    // SUBSTRACT\n    case productConst.SUBSTRACT_PRODUCT:\n      newProducts[payload.index].stock -= payload.value;\n      return { ...state, products: newProducts };\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;\n"]},"metadata":{},"sourceType":"module"}