{"ast":null,"code":"var _jsxFileName = \"/home/mower/projets/exercice/redux-test/client/src/pages/Main/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProduct, removeProduct, refoundProduct, substractProduct } from \"../../actions/product.actions\";\nimport { addProductToOrder, removeProductFromOrder, buyOrder, sendOrder } from \"../../actions/order.actions\";\nimport { becomeCustomer, becomeAdmin } from \"../../actions/user.actions\";\nimport ProductCard from \"../../components/ProductCard\";\nimport ProductForm from \"../../components/ProductForm\";\nimport UserMagicButton from \"../../components/UserMagicButton\";\nimport OrderList from \"../../components/OrderList\";\nimport \"./index.scss\";\n\nclass Main extends Component {\n  render() {\n    // Props variables\n    const _this$props = this.props,\n          products = _this$props.products,\n          orders = _this$props.orders,\n          user = _this$props.user; //  Product props actions\n\n    const productActions = this.props.productActions; // Order props actions\n\n    const orderActions = this.props.orderActions; // User props actions\n\n    const userActions = this.props.userActions;\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row row-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(UserMagicButton, {\n      user: user,\n      actions: userActions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), // Render ProductForm if user is admin\n    user.isAdmin && React.createElement(ProductForm, {\n      actions: productActions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row product-cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, products.map((product, index) => React.createElement(\"div\", {\n      key: product.name,\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ProductCard, {\n      product: product,\n      user: user,\n      actions: {\n        orderActions,\n        productActions\n      },\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(OrderList, {\n      products: products,\n      orders: orders,\n      user: user,\n      actions: {\n        orderActions,\n        productActions\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.productReducer.products,\n  orders: state.orderReducer.orders,\n  user: state.userReducer.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // Product\n  productActions: {\n    addProduct: newProduct => dispatch(addProduct(newProduct)),\n    removeProduct: index => dispatch(removeProduct(index)),\n    refoundProduct: (index, selectValue) => dispatch(refoundProduct(index, selectValue)),\n    substractProduct: (index, value) => dispatch(substractProduct(index, value))\n  },\n  // Order\n  orderActions: {\n    addProductToOrder: (product, quantity, price) => dispatch(addProductToOrder(product, quantity, price)),\n    removeProductFromOrder: index => dispatch(removeProductFromOrder(index)),\n    buyOrder: orderList => dispatch(buyOrder(orderList)),\n    sendOrder: index => dispatch(sendOrder(index))\n  },\n  // User\n  userActions: {\n    becomeCustomer: () => dispatch(becomeCustomer()),\n    becomeAdmin: () => dispatch(becomeAdmin())\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/home/mower/projets/exercice/redux-test/client/src/pages/Main/index.js"],"names":["React","Component","connect","addProduct","removeProduct","refoundProduct","substractProduct","addProductToOrder","removeProductFromOrder","buyOrder","sendOrder","becomeCustomer","becomeAdmin","ProductCard","ProductForm","UserMagicButton","OrderList","Main","render","props","products","orders","user","productActions","orderActions","userActions","isAdmin","map","product","index","name","mapStateToProps","state","productReducer","orderReducer","userReducer","mapDispatchToProps","dispatch","newProduct","selectValue","value","quantity","price","orderList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  addProduct,\n  removeProduct,\n  refoundProduct,\n  substractProduct\n} from \"../../actions/product.actions\";\n\nimport {\n  addProductToOrder,\n  removeProductFromOrder,\n  buyOrder,\n  sendOrder\n} from \"../../actions/order.actions\";\n\nimport { becomeCustomer, becomeAdmin } from \"../../actions/user.actions\";\n\nimport ProductCard from \"../../components/ProductCard\";\nimport ProductForm from \"../../components/ProductForm\";\nimport UserMagicButton from \"../../components/UserMagicButton\";\nimport OrderList from \"../../components/OrderList\";\n\nimport \"./index.scss\";\n\nclass Main extends Component {\n  render() {\n    // Props variables\n    const { products, orders, user } = this.props;\n\n    //  Product props actions\n    const { productActions } = this.props;\n\n    // Order props actions\n    const { orderActions } = this.props;\n\n    // User props actions\n    const { userActions } = this.props;\n\n    return (\n      <div className=\"main\">\n        <div className=\"row row-form\">\n          <UserMagicButton user={user} actions={userActions} />\n          {// Render ProductForm if user is admin\n          user.isAdmin && <ProductForm actions={productActions} />}\n        </div>\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <div className=\"row product-cont\">\n              {products.map((product, index) => (\n                <div key={product.name} className=\"col-4\">\n                  <ProductCard\n                    product={product}\n                    user={user}\n                    actions={{ orderActions, productActions }}\n                    index={index}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <OrderList\n              products={products}\n              orders={orders}\n              user={user}\n              actions={{ orderActions, productActions }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.productReducer.products,\n  orders: state.orderReducer.orders,\n  user: state.userReducer.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // Product\n  productActions: {\n    addProduct: newProduct => dispatch(addProduct(newProduct)),\n    removeProduct: index => dispatch(removeProduct(index)),\n    refoundProduct: (index, selectValue) =>\n      dispatch(refoundProduct(index, selectValue)),\n    substractProduct: (index, value) => dispatch(substractProduct(index, value))\n  },\n  // Order\n  orderActions: {\n    addProductToOrder: (product, quantity, price) =>\n      dispatch(addProductToOrder(product, quantity, price)),\n    removeProductFromOrder: index => dispatch(removeProductFromOrder(index)),\n    buyOrder: orderList => dispatch(buyOrder(orderList)),\n    sendOrder: index => dispatch(sendOrder(index))\n  },\n  // User\n  userActions: {\n    becomeCustomer: () => dispatch(becomeCustomer()),\n    becomeAdmin: () => dispatch(becomeAdmin())\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n"]},"metadata":{},"sourceType":"module"}