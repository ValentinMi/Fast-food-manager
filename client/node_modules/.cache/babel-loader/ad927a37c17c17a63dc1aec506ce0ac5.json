{"ast":null,"code":"import _objectSpread from \"/home/mower/projets/exercice/redux-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mower/projets/exercice/redux-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mower/projets/exercice/redux-test/client/src/components/ProductForm/index.js\";\nimport React, { useState } from \"react\";\nimport \"./index.scss\";\n\nconst CardForm = ({\n  actions\n}) => {\n  const _useState = useState({\n    name: \"\",\n    stock: \"\",\n    price: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVisible = _useState4[0],\n        setIsVisible = _useState4[1];\n\n  const handleVisibility = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case \"name\":\n        setForm(_objectSpread({}, form, {\n          name: event.target.value\n        }));\n        break;\n\n      case \"stock\":\n        setForm(_objectSpread({}, form, {\n          stock: parseInt(event.target.value)\n        }));\n        break;\n\n      case \"price\":\n        setForm(_objectSpread({}, form, {\n          price: parseFloat(event.target.value)\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validateForm()) {\n      actions.addProduct(form);\n    } else return;\n  }; // Need change for joi-browser validation\n\n\n  const validateForm = () => {\n    if (form.name !== \"\" && form.stock !== \"\" && form.price !== \"\") return true;\n    return () => alert(\"Formulaire incomplet\");\n  }; //////////////////////////////////////////////////\n\n\n  return React.createElement(\"div\", {\n    className: \"col-2 col-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, // Conditionnal rendering on form\n  isVisible ? React.createElement(\"div\", {\n    className: \"form-group form-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Stock\"), React.createElement(\"input\", {\n    name: \"stock\",\n    type: \"number\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"input\", {\n    name: \"price\",\n    type: \"number\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Add\")) : React.createElement(\"button\", {\n    className: \"btn btn-success btn-lg btn-new-product\",\n    onClick: handleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add product\"));\n};\n\nexport default CardForm;","map":{"version":3,"sources":["/home/mower/projets/exercice/redux-test/client/src/components/ProductForm/index.js"],"names":["React","useState","CardForm","actions","name","stock","price","form","setForm","isVisible","setIsVisible","handleVisibility","handleChange","event","target","value","parseInt","parseFloat","handleSubmit","validateForm","addProduct","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACRF,QAAQ,CAAC;AAC/BG,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CADA;AAAA;AAAA,QACzBC,IADyB;AAAA,QACnBC,OADmB;;AAAA,qBAOEP,QAAQ,CAAC,KAAD,CAPV;AAAA;AAAA,QAOzBQ,SAPyB;AAAA,QAOdC,YAPc;;AAShC,QAAMC,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAGC,KAAK,IAAI;AAC5B,YAAQA,KAAK,CAACC,MAAN,CAAaV,IAArB;AACE,WAAK,MAAL;AACEI,QAAAA,OAAO,mBAAMD,IAAN;AAAYH,UAAAA,IAAI,EAAES,KAAK,CAACC,MAAN,CAAaC;AAA/B,WAAP;AACA;;AACF,WAAK,OAAL;AACEP,QAAAA,OAAO,mBAAMD,IAAN;AAAYF,UAAAA,KAAK,EAAEW,QAAQ,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA3B,WAAP;AACA;;AACF,WAAK,OAAL;AACEP,QAAAA,OAAO,mBAAMD,IAAN;AAAYD,UAAAA,KAAK,EAAEW,UAAU,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA7B,WAAP;AACA;;AACF;AACE;AAXJ;AAaD,GAdD;;AAgBA,QAAMG,YAAY,GAAG,MAAM;AACzB,QAAIC,YAAY,EAAhB,EAAoB;AAClBhB,MAAAA,OAAO,CAACiB,UAAR,CAAmBb,IAAnB;AACD,KAFD,MAEO;AACR,GAJD,CA7BgC,CAmChC;;;AACA,QAAMY,YAAY,GAAG,MAAM;AACzB,QAAIZ,IAAI,CAACH,IAAL,KAAc,EAAd,IAAoBG,IAAI,CAACF,KAAL,KAAe,EAAnC,IAAyCE,IAAI,CAACD,KAAL,KAAe,EAA5D,EAAgE,OAAO,IAAP;AAChE,WAAO,MAAMe,KAAK,CAAC,sBAAD,CAAlB;AACD,GAHD,CApCgC,CAwChC;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACDZ,EAAAA,SAAS,GACP;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,QAAQ,EAAEA,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,QAAQ,EAAEA,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEM,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADO,GAaP;AACE,IAAA,SAAS,EAAC,wCADZ;AAEE,IAAA,OAAO,EAAEP,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfJ,CADF;AAyBD,CAnED;;AAqEA,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./index.scss\";\n\nconst CardForm = ({ actions }) => {\n  const [form, setForm] = useState({\n    name: \"\",\n    stock: \"\",\n    price: \"\"\n  });\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleVisibility = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case \"name\":\n        setForm({ ...form, name: event.target.value });\n        break;\n      case \"stock\":\n        setForm({ ...form, stock: parseInt(event.target.value) });\n        break;\n      case \"price\":\n        setForm({ ...form, price: parseFloat(event.target.value) });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (validateForm()) {\n      actions.addProduct(form);\n    } else return;\n  };\n\n  // Need change for joi-browser validation\n  const validateForm = () => {\n    if (form.name !== \"\" && form.stock !== \"\" && form.price !== \"\") return true;\n    return () => alert(\"Formulaire incomplet\");\n  };\n  //////////////////////////////////////////////////\n\n  return (\n    <div className=\"col-2 col-form\">\n      {// Conditionnal rendering on form\n      isVisible ? (\n        <div className=\"form-group form-card\">\n          <label>Name</label>\n          <input name=\"name\" type=\"text\" onChange={handleChange} />\n          <label>Stock</label>\n          <input name=\"stock\" type=\"number\" onChange={handleChange} />\n          <label>Price</label>\n          <input name=\"price\" type=\"number\" onChange={handleChange} />\n          <button className=\"btn btn-primary\" onClick={handleSubmit}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <button\n          className=\"btn btn-success btn-lg btn-new-product\"\n          onClick={handleVisibility}\n        >\n          Add product\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default CardForm;\n"]},"metadata":{},"sourceType":"module"}