{"ast":null,"code":"import _slicedToArray from \"/home/mower/projets/exercice/redux-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mower/projets/exercice/redux-test/client/src/components/ProductCard/index.js\";\nimport React, { useState } from \"react\";\nimport SelectInput from \"../shared/SelectInput/index\";\nimport \"./index.scss\";\n\nconst ProductCard = ({\n  user,\n  product,\n  actions,\n  index,\n  inOrderList\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectValue = _useState2[0],\n        setSelectValue = _useState2[1]; // Destructure product obj\n\n\n  const name = product.name,\n        stock = product.stock,\n        quantity = product.quantity,\n        price = product.price; // Destructure user obj\n\n  const isAdmin = user.isAdmin; // Destructure actions\n\n  const _actions$productActio = actions.productActions,\n        removeProduct = _actions$productActio.removeProduct,\n        refoundProduct = _actions$productActio.refoundProduct;\n  const _actions$orderActions = actions.orderActions,\n        addProductToOrder = _actions$orderActions.addProductToOrder,\n        removeProductFromOrder = _actions$orderActions.removeProductFromOrder;\n\n  const handleSelectChange = newValue => {\n    setSelectValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card card-product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: \"btn-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, // IF CARD IS IN ORDER LIST => UI FOR ORDER LIST\n  inOrderList ? renderOrderUI() : // ELSE CARD IS IN PRODUCT BOARD => UI FOR PRODUCT BOARD\n  // If user is admin => render admin btn\n  isAdmin ? renderAdminUI() : // Else user is customer => render customer btn\n  renderCustomerUI()))); // UI //\n\n  function renderOrderUI() {\n    return React.createElement(\"div\", {\n      className: \"order-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Quantity: \", quantity), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, price, \" \\u20AC\"), !isAdmin && React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => removeProductFromOrder(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Remove\"));\n  }\n\n  function renderAdminUI() {\n    return React.createElement(\"div\", {\n      className: \"admin-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Stock: \", stock), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, price, \" \\u20AC\"), React.createElement(SelectInput, {\n      length: 50,\n      name: name,\n      onChange: handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"admin-btn-cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => refoundProduct(index, selectValue),\n      className: \"btn btn-success btn-admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Refound\"), React.createElement(\"button\", {\n      className: \"btn btn-danger btn-admin\",\n      onClick: () => removeProduct(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Delete product\")));\n  }\n\n  function renderCustomerUI() {\n    return React.createElement(\"div\", {\n      className: \"customer-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Available: \", stock), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, price * selectValue, \" \\u20AC\"), React.createElement(SelectInput, {\n      length: stock,\n      name: name,\n      onChange: handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => addProductToOrder(product, selectValue, price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"ADD\"));\n  }\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["/home/mower/projets/exercice/redux-test/client/src/components/ProductCard/index.js"],"names":["React","useState","SelectInput","ProductCard","user","product","actions","index","inOrderList","selectValue","setSelectValue","name","stock","quantity","price","isAdmin","productActions","removeProduct","refoundProduct","orderActions","addProductToOrder","removeProductFromOrder","handleSelectChange","newValue","renderOrderUI","renderAdminUI","renderCustomerUI"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport SelectInput from \"../shared/SelectInput/index\";\n\nimport \"./index.scss\";\n\nconst ProductCard = ({ user, product, actions, index, inOrderList }) => {\n  const [selectValue, setSelectValue] = useState(1);\n\n  // Destructure product obj\n  const { name, stock, quantity, price } = product;\n\n  // Destructure user obj\n  const { isAdmin } = user;\n\n  // Destructure actions\n  const { removeProduct, refoundProduct } = actions.productActions;\n  const { addProductToOrder, removeProductFromOrder } = actions.orderActions;\n\n  const handleSelectChange = newValue => {\n    setSelectValue(newValue);\n  };\n\n  return (\n    <div className=\"card card-product\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <div className=\"btn-container\">\n          {// IF CARD IS IN ORDER LIST => UI FOR ORDER LIST\n          inOrderList\n            ? renderOrderUI()\n            : // ELSE CARD IS IN PRODUCT BOARD => UI FOR PRODUCT BOARD\n            // If user is admin => render admin btn\n            isAdmin\n            ? renderAdminUI()\n            : // Else user is customer => render customer btn\n              renderCustomerUI()}\n        </div>\n      </div>\n    </div>\n  );\n\n  // UI //\n\n  function renderOrderUI() {\n    return (\n      <div className=\"order-box\">\n        <span>Quantity: {quantity}</span>\n        <p>{price} €</p>\n        {!isAdmin && (\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => removeProductFromOrder(index)}\n          >\n            Remove\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  function renderAdminUI() {\n    return (\n      <div className=\"admin-box\">\n        <span>Stock: {stock}</span>\n        <p>{price} €</p>\n        <SelectInput length={50} name={name} onChange={handleSelectChange} />\n        <div className=\"admin-btn-cont\">\n          <button\n            onClick={() => refoundProduct(index, selectValue)}\n            className=\"btn btn-success btn-admin\"\n          >\n            Refound\n          </button>\n          <button\n            className=\"btn btn-danger btn-admin\"\n            onClick={() => removeProduct(index)}\n          >\n            Delete product\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderCustomerUI() {\n    return (\n      <div className=\"customer-box\">\n        <span>Available: {stock}</span>\n        <p>{price * selectValue} €</p>\n        <SelectInput length={stock} name={name} onChange={handleSelectChange} />\n        <button\n          className=\"btn btn-success\"\n          onClick={() => addProductToOrder(product, selectValue, price)}\n        >\n          ADD\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}