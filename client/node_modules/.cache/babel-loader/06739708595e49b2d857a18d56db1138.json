{"ast":null,"code":"import _slicedToArray from \"/home/mower/projets/exercice/redux-test/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mower/projets/exercice/redux-test/client/src/components/OrderList/index.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport ProductCard from \"../ProductCard/index\";\nimport \"./index.scss\";\n\nconst OrderList = ({\n  products,\n  orders,\n  user,\n  actions\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        totalPrice = _useState2[0],\n        setTotalPrice = _useState2[1]; // Destructure order\n\n\n  const pendingOrder = orders.pendingOrder,\n        payedOrders = orders.payedOrders; // Destructure actions\n\n  const productActions = actions.productActions,\n        orderActions = actions.orderActions;\n\n  const handleTotalPrice = array => {\n    let total = 0;\n    array.forEach(product => {\n      total += product.price;\n    });\n    return total;\n  };\n\n  const handleBuy = () => {\n    // Subtract bought quantity from each product stock\n    pendingOrder.forEach(product => {\n      let productIndex = products.findIndex(p => p.name === product.name);\n      productActions.substractProduct(productIndex, product.quantity);\n    }); // Send this pendingOrder to payedOrder\n\n    orderActions.buyOrder(pendingOrder);\n  }; // Recalcul price after each change in OrderList\n  // eslint-disable-next-line\n\n\n  useEffect(() => {\n    setTotalPrice(handleTotalPrice(pendingOrder));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"order-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, user.isAdmin ? \"Payed\" : \"Your order:\"), React.createElement(\"div\", {\n    className: \"order-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"order-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, user.isAdmin ? payedOrders.map((order, orderIndex) => React.createElement(\"div\", {\n    className: \"order-payed\",\n    key: \"\".concat(order + orderIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"N\\xB0\", orderIndex), order.map((product, index) => React.createElement(ProductCard, {\n    key: \"payed\".concat(product.name).concat(orderIndex),\n    user: user,\n    product: product,\n    actions: {\n      orderActions,\n      productActions\n    },\n    index: index,\n    inOrderList: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"order-payed-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"order-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, handleTotalPrice(order), \" \\u20AC\"), React.createElement(\"button\", {\n    className: \"btn btn-warning btn-order-send\",\n    onClick: () => orderActions.sendOrder(orderIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Send\")))) : pendingOrder.map((product, index) => React.createElement(ProductCard, {\n    key: \"pending\".concat(product.name).concat(index),\n    user: user,\n    product: product,\n    actions: {\n      orderActions,\n      productActions\n    },\n    index: index,\n    inOrderList: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), !user.isAdmin && React.createElement(\"div\", {\n    className: \"buy-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, totalPrice, \" \\u20AC\"), React.createElement(\"button\", {\n    className: \"btn btn-lg btn-success btn-buy\",\n    onClick: () => handleBuy(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"BUY\"))));\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/home/mower/projets/exercice/redux-test/client/src/components/OrderList/index.js"],"names":["React","useState","useEffect","Fragment","ProductCard","OrderList","products","orders","user","actions","totalPrice","setTotalPrice","pendingOrder","payedOrders","productActions","orderActions","handleTotalPrice","array","total","forEach","product","price","handleBuy","productIndex","findIndex","p","name","substractProduct","quantity","buyOrder","isAdmin","map","order","orderIndex","index","sendOrder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\n\nimport ProductCard from \"../ProductCard/index\";\n\nimport \"./index.scss\";\n\nconst OrderList = ({ products, orders, user, actions }) => {\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // Destructure order\n  const { pendingOrder, payedOrders } = orders;\n\n  // Destructure actions\n  const { productActions, orderActions } = actions;\n\n  const handleTotalPrice = array => {\n    let total = 0;\n    array.forEach(product => {\n      total += product.price;\n    });\n    return total;\n  };\n\n  const handleBuy = () => {\n    // Subtract bought quantity from each product stock\n    pendingOrder.forEach(product => {\n      let productIndex = products.findIndex(p => p.name === product.name);\n      productActions.substractProduct(productIndex, product.quantity);\n    });\n    // Send this pendingOrder to payedOrder\n    orderActions.buyOrder(pendingOrder);\n  };\n\n  // Recalcul price after each change in OrderList\n  // eslint-disable-next-line\n  useEffect(() => {\n    setTotalPrice(handleTotalPrice(pendingOrder));\n  });\n\n  return (\n    <Fragment>\n      <h1 className=\"order-title\">{user.isAdmin ? \"Payed\" : \"Your order:\"}</h1>\n      <div className=\"order-cont\">\n        <div className=\"order-list\">\n          {user.isAdmin\n            ? payedOrders.map((order, orderIndex) => (\n                <div className=\"order-payed\" key={`${order + orderIndex}`}>\n                  <h1>NÂ°{orderIndex}</h1>\n                  {order.map((product, index) => (\n                    <ProductCard\n                      key={`payed${product.name}${orderIndex}`}\n                      user={user}\n                      product={product}\n                      actions={{ orderActions, productActions }}\n                      index={index}\n                      inOrderList={true}\n                    />\n                  ))}\n                  <div className=\"order-payed-footer\">\n                    <span className=\"order-price\">\n                      {handleTotalPrice(order)} â¬\n                    </span>\n                    <button\n                      className=\"btn btn-warning btn-order-send\"\n                      onClick={() => orderActions.sendOrder(orderIndex)}\n                    >\n                      Send\n                    </button>\n                  </div>\n                </div>\n              ))\n            : pendingOrder.map((product, index) => (\n                <ProductCard\n                  key={`pending${product.name}${index}`}\n                  user={user}\n                  product={product}\n                  actions={{ orderActions, productActions }}\n                  index={index}\n                  inOrderList={true}\n                />\n              ))}\n        </div>\n        {!user.isAdmin && (\n          <div className=\"buy-box\">\n            <span className=\"price\">{totalPrice} â¬</span>\n            <button\n              className=\"btn btn-lg btn-success btn-buy\"\n              onClick={() => handleBuy()}\n            >\n              BUY\n            </button>\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}